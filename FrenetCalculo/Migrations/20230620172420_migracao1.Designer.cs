// <auto-generated />
using System;
using FrenetCalculate.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FrenetCalculate.Migrations
{
    [DbContext(typeof(FreightQuoteDbContext))]
    [Migration("20230620172420_migracao1")]
    partial class migracao1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FrenetCalculate.Models.FreightQuote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DestinationZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FreightPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OriginZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("QuoteDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FreightQuotes");
                });

            modelBuilder.Entity("FrenetCalculate.Models.TrackingEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EventDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("EventDateTime");

                    b.Property<string>("EventDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EventDescription");

                    b.Property<string>("EventLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EventLocation");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EventType");

                    b.Property<int>("FreightQuoteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FreightQuoteId");

                    b.ToTable("TrackingEvent", (string)null);
                });

            modelBuilder.Entity("FrenetCalculate.Models.TrackingEvent", b =>
                {
                    b.HasOne("FrenetCalculate.Models.FreightQuote", "FreightQuote")
                        .WithMany("TrackingEvents")
                        .HasForeignKey("FreightQuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FreightQuote");
                });

            modelBuilder.Entity("FrenetCalculate.Models.FreightQuote", b =>
                {
                    b.Navigation("TrackingEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
